{"ast":null,"code":"'use strict';\n\nvar _require = require('stream'),\n    PassThrough = _require.PassThrough;\n\nmodule.exports = function (options) {\n  options = Object.assign({}, options);\n  var _options = options,\n      array = _options.array;\n  var _options2 = options,\n      encoding = _options2.encoding;\n  var buffer = encoding === 'buffer';\n  var objectMode = false;\n\n  if (array) {\n    objectMode = !(encoding || buffer);\n  } else {\n    encoding = encoding || 'utf8';\n  }\n\n  if (buffer) {\n    encoding = null;\n  }\n\n  var len = 0;\n  var ret = [];\n  var stream = new PassThrough({\n    objectMode: objectMode\n  });\n\n  if (encoding) {\n    stream.setEncoding(encoding);\n  }\n\n  stream.on('data', function (chunk) {\n    ret.push(chunk);\n\n    if (objectMode) {\n      len = ret.length;\n    } else {\n      len += chunk.length;\n    }\n  });\n\n  stream.getBufferedValue = function () {\n    if (array) {\n      return ret;\n    }\n\n    return buffer ? Buffer.concat(ret, len) : ret.join('');\n  };\n\n  stream.getBufferedLength = function () {\n    return len;\n  };\n\n  return stream;\n};","map":null,"metadata":{},"sourceType":"script"}