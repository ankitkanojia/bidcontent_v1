{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"S:\\\\github repo\\\\bidcontent_v1\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"S:\\\\github repo\\\\bidcontent_v1\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar execa = require('execa');\n\nvar handler = function handler(error) {\n  if (error.code === 'ENOENT') {\n    throw new Error('Couldn\\'t find the termux-api scripts. You can install them with: apt install termux-api');\n  }\n\n  throw error;\n};\n\nmodule.exports = {\n  copy: function () {\n    var _copy = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(options) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return execa('termux-clipboard-set', options);\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              handler(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    function copy(_x) {\n      return _copy.apply(this, arguments);\n    }\n\n    return copy;\n  }(),\n  paste: function () {\n    var _paste = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(options) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return execa.stdout('termux-clipboard-get', options);\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              handler(_context2.t0);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 6]]);\n    }));\n\n    function paste(_x2) {\n      return _paste.apply(this, arguments);\n    }\n\n    return paste;\n  }(),\n  copySync: function copySync(options) {\n    try {\n      execa.sync('termux-clipboard-set', options);\n    } catch (error) {\n      handler(error);\n    }\n  },\n  pasteSync: function pasteSync(options) {\n    try {\n      return execa.sync('termux-clipboard-get', options);\n    } catch (error) {\n      handler(error);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}