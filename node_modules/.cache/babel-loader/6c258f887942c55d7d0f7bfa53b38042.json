{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"S:\\\\github repo\\\\bidcontent_v1\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"S:\\\\github repo\\\\bidcontent_v1\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar path = require('path');\n\nvar execa = require('execa');\n\nvar arch = require('arch'); // Binaries from: https://github.com/sindresorhus/win-clipboard\n\n\nvar windowBinaryPath = arch() === 'x64' ? path.join(__dirname, '../fallbacks/windows/clipboard_x86_64.exe') : path.join(__dirname, '../fallbacks/windows/clipboard_i686.exe');\nmodule.exports = {\n  copy: function () {\n    var _copy = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(options) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", execa(windowBinaryPath, ['--copy'], options));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function copy(_x) {\n      return _copy.apply(this, arguments);\n    }\n\n    return copy;\n  }(),\n  paste: function () {\n    var _paste = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(options) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", execa.stdout(windowBinaryPath, ['--paste'], options));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function paste(_x2) {\n      return _paste.apply(this, arguments);\n    }\n\n    return paste;\n  }(),\n  copySync: function copySync(options) {\n    return execa.sync(windowBinaryPath, ['--copy'], options);\n  },\n  pasteSync: function pasteSync(options) {\n    return execa.sync(windowBinaryPath, ['--paste'], options);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}